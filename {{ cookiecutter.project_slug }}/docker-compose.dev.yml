volumes:
  db_{{ cookiecutter.project_slug }}:                                 # <- Rename "volume_name"
    name: db_ {{ cookiecutter.project_slug }}

networks:
  backend:
    driver: bridge

services:
  postgres:
    image: postgres:14-alpine
    restart: always
    container_name: postgres
    environment:
    - POSTGRES_USER=${POSTGRES_USER}
    - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    - POSTGRES_DB=${POSTGRES_DB}
    expose:
      - "5432"
    healthcheck:
      interval: 10s
      retries: 10
      test: "pg_isready -U \"$$POSTGRES_USER\" -d \"$$POSTGRES_DB\""
      timeout: 2s
    volumes:
      - db_{{ cookiecutter.project_slug }}:/var/lib/postgresql/data
    networks:
      - backend

  django:
    build: .
    container_name: django
    command: bash scripts/runserver.sh
    tty: True
    env_file:
      - ./.env
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - ./{{ cookiecutter.project_slug }}:/home/backend/app
    networks:
      - backend
